<!DOCTYPE html>
<html lang="{{ request.locale.iso_code }}">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="{{ page_description | default: shop.description | default: shop.name }}">
    
    <title>
        {{ page_title }}
        {%- if current_tags %} &ndash; {{ 'general.meta.tags' | t: tags: current_tags.first }}{% endif -%}
        {%- if current_page != 1 %} &ndash; {{ 'general.meta.page' | t: page: current_page }}{% endif -%}
        {%- unless page_title contains shop.name %} &ndash; {{ shop.name }}{% endunless -%}
    </title>

    {% if page_description %}
        <meta name="description" content="{{ page_description | escape }}">
    {% endif %}

    <link rel="canonical" href="{{ canonical_url }}">

    {%- if settings.favicon != blank -%}
        <link rel="icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
    {%- endif -%}

    {%- unless settings.type_header_font.system? and settings.type_body_font.system? -%}
        <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    {%- endunless -%}

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;600;700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">

    {%- liquid
        assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
        assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
        assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
    %}

    {% style %}
        {{ settings.type_body_font | font_face: font_display: 'swap' }}
        {{ body_font_bold | font_face: font_display: 'swap' }}
        {{ body_font_italic | font_face: font_display: 'swap' }}
        {{ body_font_bold_italic | font_face: font_display: 'swap' }}
        {{ settings.type_header_font | font_face: font_display: 'swap' }}

        :root {
            --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
            --font-body-style: {{ settings.type_body_font.style }};
            --font-body-weight: {{ settings.type_body_font.weight }};
            --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};

            --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
            --font-heading-style: {{ settings.type_header_font.style }};
            --font-heading-weight: {{ settings.type_header_font.weight }};

            --goblin-green: #2d5016;
            --goblin-gold: #d4af37;
            --goblin-brown: #8b4513;
            --forest-green: #228b22;
            --earth-brown: #8b7355;
            --parchment: #f4f1e8;
            --shadow-dark: rgba(0, 0, 0, 0.3);
            --text-primary: #2c3e50;
            --text-secondary: #5d6d7e;
        }

        *,
        *::before,
        *::after {
            box-sizing: inherit;
        }

        html {
            box-sizing: border-box;
            font-size: calc(var(--font-body-scale) * 62.5%);
            height: 100%;
        }

        body {
            display: grid;
            grid-template-rows: auto auto 1fr auto;
            grid-template-columns: 100%;
            min-height: 100%;
            margin: 0;
            font-size: 1.5rem;
            letter-spacing: 0.06rem;
            line-height: calc(1 + 0.8 / var(--font-body-scale));
            font-family: var(--font-body-family);
            font-style: var(--font-body-style);
            font-weight: var(--font-body-weight);
            background: linear-gradient(135deg, var(--parchment) 0%, #e8dcc0 100%);
            color: var(--text-primary);
        }
    {% endstyle %}

    {{ content_for_header }}

    <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    if (Shopify.designMode) {
      document.documentElement.classList.add('shopify-design-mode');
    }
    </script>
</head>

<body class="gradient">
    <a class="skip-to-content-link button visually-hidden" href="#MainContent">
        {{ 'accessibility.skip_to_text' | t }}
    </a>

    {%- liquid
        assign skip_cart_drawer = false
        if settings.cart_type == "notification" or settings.cart_type == "page" or request.design_mode
            assign skip_cart_drawer = true
        endif
    -%}

    {% section 'announcement-bar' %}
    {% section 'header' %}
    {% section 'cart-notification' %}
    {% section 'cart-drawer' %}

    <main id="MainContent" class="content-for-layout focus-none" role="main" tabindex="-1">
        {{ content_for_layout }}
    </main>

    {% section 'footer' %}

    <ul hidden>
        <li id="a11y-refresh-page-message">{{ 'accessibility.refresh_page' | t }}</li>
        <li id="a11y-new-window-message">{{ 'accessibility.link_messages.new_window' | t }}</li>
    </ul>

    <script>
        window.shopUrl = '{{ request.origin }}';
        window.routes = {
            cart_add_url: '{{ routes.cart_add_url }}',
            cart_change_url: '{{ routes.cart_change_url }}',
            cart_update_url: '{{ routes.cart_update_url }}',
            cart_url: '{{ routes.cart_url }}',
            predictive_search_url: '{{ routes.predictive_search_url }}'
        };

        window.cartStrings = {
            error: `{{ 'sections.cart.cart_error' | t }}`,
            quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`
        }

        window.variantStrings = {
            addToCart: `{{ 'products.product.add_to_cart' | t }}`,
            soldOut: `{{ 'products.product.sold_out' | t }}`,
            unavailable: `{{ 'products.product.unavailable' | t }}`,
            unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`,
        }

        window.accessibilityStrings = {
            imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
            shareSuccess: `{{ 'general.share.success_message' | t }}`,
            pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
            playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        }
    </script>

    {%- if settings.predictive_search_enabled -%}
        <script src="{{ 'predictive-search.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {{ 'goblin-games.js' | asset_url | script_tag }}
</body>
</html>